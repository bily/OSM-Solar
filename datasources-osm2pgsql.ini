[DEFAULT]
srs3 = +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over
srs4326 = +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs
srs900913 = +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs
srsmerc = +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs

[postgis_conn]
type = postgis
host = localhost
dbname = planet_osm
user = osm
estimate_extent = false
extent = -20037508,-20037508,20037508,20037508
layer_srs = %(srs900913)s

[buildings]
template = postgis_conn
table = (SELECT way, ST_Area(way) AS area FROM planet_osm_polygon WHERE building IS NOT NULL) AS footprints

[green_labels__area_labels]
template = postgis_conn
table = (SELECT way,
	            name,
	            ST_Area(way) / 1000000 AS sq_km,
	            (CASE WHEN leisure IN ('park', 'water_park', 'marina',
	                                   'nature_reserve', 'playground',
	                                   'garden', 'common') THEN 'park'
	                  WHEN amenity IN ('graveyard') THEN 'cemetery'
	                  WHEN landuse IN ('cemetery') THEN 'cemetery'
	                  WHEN leisure IN ('sports_centre', 'golf_course',
	                                   'stadium', 'track', 'pitch') THEN 'sport'
	                  WHEN landuse IN ('recreation_ground') THEN 'sport'
	                  WHEN landuse IN ('forest', 'wood') THEN 'forest'
	             ELSE '' END) AS kind
	     FROM planet_osm_polygon
	     WHERE leisure IN ('park', 'water_park', 'marina', 'nature_reserve',
	                       'playground', 'garden', 'common')
	        OR amenity IN ('graveyard')
	        OR landuse IN ('cemetery')
	        OR leisure IN ('sports_centre', 'golf_course', 'stadium',
	                       'track', 'pitch')
	        OR landuse IN ('recreation_ground')
	        OR landuse IN ('forest', 'wood')
	     
	     ORDER BY ST_Area(way) DESC
	    
	    ) AS green

[land]
template = postgis_conn
table = coastline

[land_city]
template = postgis_conn
table = coastline

[major_road_labels]
template = postgis_conn
table = (
	        SELECT highway, name, way
	        FROM planet_osm_line
	        WHERE highway IN ('motorway', 'trunk', 'primary', 'secondary')
	    ) AS labels

[minor_road_labels]
template = postgis_conn
table = (
	                SELECT highway, name, way
	                FROM planet_osm_line
	                WHERE highway IN ('tertiary', 'residential', 'unclassified', 'road', 'unclassified', 'service', 'minor')
	            ) AS labels

[place_labels]
template = postgis_conn
table = (
	        SELECT place, name,
	              (CASE WHEN population ~ E'^[[:digit:]]+$' THEN CAST (population AS INT)
	                    ELSE 0
	                    END) AS population,
	               name||'('||population||')' AS name_pop,
	               way
	        FROM planet_osm_point
	        WHERE place IN ('city', 'town', 'village', 'hamlet')
	        ORDER BY population DESC
	    ) AS labels

[processed_coast_shoreline]
template = postgis_conn
table = coastline

[water_bodies]
template = postgis_conn
table = (SELECT way,
	            name
	     FROM planet_osm_polygon
	     WHERE "natural" IN ('water', 'bay')
	        OR waterway IN ('riverbank')
	        OR landuse = 'reservoir'
	     ORDER BY z_order ASC, way_area DESC
	    
	    ) AS water

[water_body_shorelines]
template = postgis_conn
table = (SELECT way,
	            name
	     FROM planet_osm_polygon
	     WHERE "natural" IN ('water', 'bay')
	        OR waterway IN ('riverbank')
	     ORDER BY z_order ASC, way_area DESC
	    
	    ) AS water

[water_labels__area_labels]
template = postgis_conn
table = (SELECT way,
	            name,
	            ST_Area(way) / 1000000 AS sq_km
	     FROM planet_osm_polygon
	     WHERE "natural" IN ('water', 'bay')
	        OR waterway IN ('riverbank')
	     ORDER BY z_order ASC, way_area DESC
	    
	    ) AS water

[z10_roads]
template = postgis_conn
table = (
	      SELECT way,
	             highway,
	             railway,
	             'inline'::VARCHAR AS render,
	    
	             (CASE WHEN highway IN ('motorway') THEN 'highway'
	                   WHEN highway IN ('trunk', 'primary') THEN 'major_road'
	                   ELSE 'minor_road' END) AS kind,
	    
	             'no'::VARCHAR AS is_link,
	             (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_tunnel,
	             (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_bridge,
	    
	             (CASE WHEN highway IN ('motorway') THEN 0
	                   WHEN highway IN ('trunk', 'primary') THEN 1
	                   WHEN highway IN ('secondary', 'tertiary') THEN 2
	                   ELSE 99 END) AS priority
	
	      FROM planet_osm_line
	
	      WHERE highway IN ('motorway')
	         OR highway IN ('trunk', 'primary')
	         OR highway IN ('secondary')
	    
	      ORDER BY priority DESC
	
	    ) AS planet_osm_line_z10

[z11_roads]
template = postgis_conn
table = (
	      SELECT way,
	             highway,
	             railway,
	             'inline'::VARCHAR AS render,
	    
	             (CASE WHEN highway IN ('motorway') THEN 'highway'
	                   WHEN highway IN ('trunk', 'primary') THEN 'major_road'
	                   ELSE 'minor_road' END) AS kind,
	    
	             'no'::VARCHAR AS is_link,
	             (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_tunnel,
	             (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_bridge,
	    
	             (CASE WHEN highway IN ('motorway') THEN 0
	                   WHEN highway IN ('trunk', 'primary') THEN 1
	                   WHEN highway IN ('secondary', 'tertiary') THEN 2
	                   ELSE 99 END) AS priority
	
	      FROM planet_osm_line
	
	      WHERE highway IN ('motorway')
	         OR highway IN ('trunk', 'primary')
	         OR highway IN ('secondary', 'tertiary')
	    
	      ORDER BY priority DESC
	
	    ) AS planet_osm_line_z11

[z12_roads]
template = postgis_conn
table = (
	      SELECT way,
	             highway,
	             railway,
	             'inline'::VARCHAR AS render,
	    
	             (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 'highway'
	                   WHEN highway IN ('trunk', 'trunk_link', 'secondary', 'primary') THEN 'major_road'
	                   ELSE 'minor_road' END) AS kind,
	    
	             (CASE WHEN highway LIKE '%%_link' THEN 'yes'
	                   ELSE 'no' END) AS is_link,
	             (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_tunnel,
	             (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_bridge,
	    
	             (CASE WHEN highway IN ('motorway') THEN 0
	                   WHEN highway IN ('trunk', 'secondary', 'primary') THEN 1
	                   WHEN highway IN ('tertiary', 'residential', 'unclassified', 'road') THEN 2
	                   WHEN highway LIKE '%%_link' THEN 3
	                   ELSE 99 END) AS priority
	
	      FROM planet_osm_line
	
	      WHERE highway IN ('motorway', 'motorway_link')
	         OR highway IN ('trunk', 'trunk_link', 'secondary', 'primary')
	         OR highway IN ('tertiary', 'residential', 'unclassified', 'road', 'unclassified')
	    
	      ORDER BY priority DESC
	
	    ) AS planet_osm_line_z12

[z13_roads]
template = postgis_conn
table = (
	      SELECT way,
	             highway,
	             railway,
	             'inline'::VARCHAR AS render,
	    
	             (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 'highway'
	                   WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary', 'tertiary_link') THEN 'major_road'
	                   ELSE 'minor_road' END) AS kind,
	    
	             (CASE WHEN highway LIKE '%%_link' THEN 'yes'
	                   ELSE 'no' END) AS is_link,
	             (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_tunnel,
	             (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_bridge,
	    
	             (CASE WHEN highway IN ('motorway') THEN 0
	                   WHEN highway IN ('motorway_link') THEN 1
	                   WHEN highway IN ('trunk', 'primary', 'secondary', 'tertiary') THEN 2
	                   WHEN highway IN ('trunk_link', 'primary_link', 'secondary_link') THEN 3
	                   WHEN highway IN ('residential', 'unclassified', 'road') THEN 4
	                   ELSE 99 END) AS priority
	
	      FROM planet_osm_line
	
	      WHERE highway IN ('motorway', 'motorway_link')
	         OR highway IN ('trunk', 'trunk_link', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary')
	         OR highway IN ('residential', 'unclassified', 'road', 'unclassified')
	    
	      ORDER BY priority DESC
	
	    ) AS planet_osm_line_z13

[z14_roads]
template = postgis_conn
table = (
	      SELECT way,
	             highway,
	             railway,
	             render,
	    
	             (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 'highway'
	                   WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary', 'tertiary_link') THEN 'major_road'
	                   WHEN highway IN ('residential', 'unclassified', 'road', 'minor') THEN 'minor_road'
	                   WHEN railway IN ('rail') THEN 'rail'
	                   ELSE 'unknown' END) AS kind,
	    
	             (CASE WHEN highway LIKE '%%_link' THEN 'yes'
	                   ELSE 'no' END) AS is_link,
	             (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_tunnel,
	             (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_bridge,
	    
	             (CASE WHEN highway IN ('motorway', 'motorway_link', 'trunk', 'trunk_link') THEN 0
	                   ELSE 99 END) AS grouping,
	    
	             (CASE WHEN layer ~ E'^-?[[:digit:]]+(\.[[:digit:]]+)?$' THEN CAST (layer AS FLOAT)
	                   ELSE 0
	                   END) AS explicit_layer,
	    
	             (CASE WHEN highway IN ('motorway') THEN 0
	                   WHEN highway IN ('trunk') THEN 1
	                   WHEN highway IN ('primary') THEN 2
	                   WHEN highway IN ('secondary') THEN 3
	                   WHEN highway IN ('tertiary') THEN 4
	                   WHEN highway LIKE '%%_link' THEN 5
	                   WHEN highway IN ('residential', 'unclassified', 'road', 'minor') THEN 6
	                   WHEN railway IN ('rail') THEN 7
	                   ELSE 99 END) AS priority
	      FROM (
	        
	          SELECT *, 'outline' AS render, 1 AS is_outline, 1 AS is_casing
	          FROM planet_osm_line
	          WHERE railway IN ('rail')
	        
	          UNION
	          
	          SELECT *, 'casing' AS render, 0 AS is_outline, 1 AS is_casing
	          FROM planet_osm_line
	          WHERE railway IN ('rail')
	        
	          UNION
	          
	          SELECT *, 'inline' AS render, 0 AS is_outline, 0 AS is_casing
	          FROM planet_osm_line
	          WHERE highway IN ('motorway', 'motorway_link')
	             OR highway IN ('trunk', 'trunk_link', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary', 'tertiary_link')
	             OR highway IN ('residential', 'unclassified', 'road', 'minor')
	             OR railway IN ('rail')
	    
	      ) AS roads
	    
	      ORDER BY grouping DESC, is_outline DESC, explicit_layer ASC, is_casing DESC, priority DESC
	
	    ) AS planet_osm_line_z14

[z15plus_roads]
template = postgis_conn
table = (
	      SELECT way,
	             highway,
	             railway,
	             render,
	    
	             (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 'highway'
	                   WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary', 'tertiary_link') THEN 'major_road'
	                   WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
	                   WHEN railway IN ('rail', 'tram', 'light_rail', 'narrow_guage', 'monorail') THEN 'rail'
	                   ELSE 'minor_road' END) AS kind,
	    
	             (CASE WHEN highway LIKE '%%_link' THEN 'yes'
	                   ELSE 'no' END) AS is_link,
	             (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_tunnel,
	             (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
	                   ELSE 'no' END) AS is_bridge,
	    
	             (CASE WHEN layer ~ E'^-?[[:digit:]]+(\.[[:digit:]]+)?$' THEN CAST (layer AS FLOAT)
	                   ELSE 0
	                   END) AS explicit_layer,
	    
	             (CASE WHEN tunnel in ('yes', 'true') THEN -1
	                   WHEN bridge in ('yes', 'true') THEN 1
	                   ELSE 0
	                   END) AS implied_layer,
	    
	             (CASE WHEN highway IN ('motorway') THEN 0
	                   WHEN railway IN ('rail', 'tram', 'light_rail', 'narrow_guage', 'monorail') THEN .5
	                   WHEN highway IN ('trunk') THEN 1
	                   WHEN highway IN ('primary') THEN 2
	                   WHEN highway IN ('secondary') THEN 3
	                   WHEN highway IN ('tertiary') THEN 4
	                   WHEN highway LIKE '%%_link' THEN 5
	                   WHEN highway IN ('residential', 'unclassified', 'road') THEN 6
	                   WHEN highway IN ('unclassified', 'service', 'minor') THEN 7
	                   ELSE 99 END) AS priority
	      FROM (
	        
	          SELECT 'inline' AS render, 0 AS is_outline, 0 AS is_casing,
	                 way, highway, NULL AS railway, tunnel, bridge, layer
	          FROM planet_osm_line
	          WHERE highway IN ('motorway', 'motorway_link')
	             OR highway IN ('trunk', 'trunk_link', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary', 'tertiary_link')
	             OR highway IN ('residential', 'unclassified', 'road', 'unclassified', 'service', 'minor')
	             OR highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway')
	        
	          UNION
	          
	          SELECT 'outline' AS render, 1 AS is_outline, 1 AS is_casing,
	                 way, NULL AS highway, railway, tunnel, bridge, layer
	          FROM planet_osm_line
	          WHERE railway IN ('rail', 'tram', 'light_rail', 'narrow_guage', 'monorail')
	        
	          UNION
	          
	          SELECT 'casing' AS render, 0 AS is_outline, 1 AS is_casing,
	                 way, NULL AS highway, railway, tunnel, bridge, layer
	          FROM planet_osm_line
	          WHERE railway IN ('rail', 'tram', 'light_rail', 'narrow_guage', 'monorail')
	        
	          UNION
	          
	          SELECT 'inline' AS render, 0 AS is_outline, 0 AS is_casing,
	                 way, NULL AS highway, railway, tunnel, bridge, layer
	          FROM planet_osm_line
	          WHERE railway IN ('rail', 'tram', 'light_rail', 'narrow_guage', 'monorail')
	    
	      ) AS roads
	    
	      ORDER BY is_outline DESC, explicit_layer ASC, implied_layer ASC, is_casing DESC, priority DESC
	
	    ) AS planet_osm_line_z15plus

