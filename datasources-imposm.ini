[DEFAULT]
srs3 = +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over
srs4326 = +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs
srs900913 = +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs
srsmerc = +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs

[postgis_conn]
type = postgis
host = localhost
dbname = planet_osm
user = osm
estimate_extent = false
extent = -20037508,-20037508,20037508,20037508
layer_srs = %(srs900913)s

[buildings]
template = postgis_conn
table = (SELECT way, ST_Area(way) AS area FROM planet_osm_polygon WHERE building IS NOT NULL) AS footprints

[green_labels__area_labels]
template = postgis_conn
table = (SELECT way,
	            name,
	            ST_Area(way) / 1000000 AS sq_km,
	            (CASE WHEN leisure IN ('park', 'water_park', 'marina',
	                                   'nature_reserve', 'playground',
	                                   'garden', 'common') THEN 'park'
	                  WHEN amenity IN ('graveyard') THEN 'cemetery'
	                  WHEN landuse IN ('cemetery') THEN 'cemetery'
	                  WHEN leisure IN ('sports_centre', 'golf_course',
	                                   'stadium', 'track', 'pitch') THEN 'sport'
	                  WHEN landuse IN ('recreation_ground') THEN 'sport'
	                  WHEN landuse IN ('forest', 'wood') THEN 'forest'
	             ELSE '' END) AS kind
	     FROM planet_osm_polygon
	     WHERE leisure IN ('park', 'water_park', 'marina', 'nature_reserve',
	                       'playground', 'garden', 'common')
	        OR amenity IN ('graveyard')
	        OR landuse IN ('cemetery')
	        OR leisure IN ('sports_centre', 'golf_course', 'stadium',
	                       'track', 'pitch')
	        OR landuse IN ('recreation_ground')
	        OR landuse IN ('forest', 'wood')
	     
	     ORDER BY ST_Area(way) DESC
	    
	    ) AS green

[land]
template = postgis_conn
table = coastline

[land_city]
template = postgis_conn
table = coastline

[major_road_labels]
template = postgis_conn
table = (
	        SELECT highway, name, geometry
	        FROM osm_roads_z15plus
	        WHERE highway IN ('motorway', 'trunk', 'primary', 'secondary')
	    ) AS labels

[minor_road_labels]
template = postgis_conn
table = (
	        SELECT highway, name, geometry
	        FROM osm_roads_z15plus
	        WHERE highway IN ('tertiary', 'residential', 'unclassified', 'road', 'unclassified', 'service', 'minor')
	    ) AS labels

[place_labels]
template = postgis_conn
table = (
	        SELECT place, name,
	              (CASE WHEN population ~ E'^[[:digit:]]+$' THEN CAST (population AS INT)
	                    ELSE 0
	                    END) AS population,
	               name||'('||population||')' AS name_pop,
	               way
	        FROM planet_osm_point
	        WHERE place IN ('city', 'town', 'village', 'hamlet')
	        ORDER BY population DESC
	    ) AS labels

[processed_coast_shoreline]
template = postgis_conn
table = coastline

[water_bodies]
template = postgis_conn
table = (SELECT way,
	            name
	     FROM planet_osm_polygon
	     WHERE "natural" IN ('water', 'bay')
	        OR waterway IN ('riverbank')
	        OR landuse = 'reservoir'
	     ORDER BY z_order ASC, way_area DESC
	    
	    ) AS water

[water_body_shorelines]
template = postgis_conn
table = (SELECT way,
	            name
	     FROM planet_osm_polygon
	     WHERE "natural" IN ('water', 'bay')
	        OR waterway IN ('riverbank')
	     ORDER BY z_order ASC, way_area DESC
	    
	    ) AS water

[water_labels__area_labels]
template = postgis_conn
table = (SELECT way,
	            name,
	            ST_Area(way) / 1000000 AS sq_km
	     FROM planet_osm_polygon
	     WHERE "natural" IN ('water', 'bay')
	        OR waterway IN ('riverbank')
	     ORDER BY z_order ASC, way_area DESC
	    
	    ) AS water

[z10_roads]
template = postgis_conn
table = (SELECT name, kind, highway, is_link, bridge, tunnel, geometry, render
          FROM (
                    SELECT *, 'outline' AS render, 1 AS is_outline FROM osm_roads_z10 WHERE kind != 'minor_road'
              UNION SELECT *,  'inline' AS render, 0 AS is_outline FROM osm_roads_z10
          ) AS roads
        ORDER BY priority DESC, is_outline DESC) AS roads

[z11_roads]
template = postgis_conn
table = (SELECT name, kind, highway, is_link, bridge, tunnel, geometry, render
          FROM (
                    SELECT *, 'outline' AS render, 1 AS is_outline FROM osm_roads_z11 WHERE kind != 'minor_road'
              UNION SELECT *,  'inline' AS render, 0 AS is_outline FROM osm_roads_z11
          ) AS roads
        ORDER BY priority DESC, is_outline DESC) AS roads

[z12_roads]
template = postgis_conn
table = (SELECT name, kind, highway, is_link, bridge, tunnel, geometry, render
          FROM (
                    SELECT *, 'outline' AS render, 1 AS is_outline FROM osm_roads_z12 WHERE kind != 'minor_road'
              UNION SELECT *,  'inline' AS render, 0 AS is_outline FROM osm_roads_z12
          ) AS roads
        ORDER BY priority DESC, is_outline DESC) AS roads

[z13_roads]
template = postgis_conn
table = (SELECT name, kind, highway, is_link, bridge, tunnel, geometry, render
          FROM (
                    SELECT *, 'outline' AS render, 1 AS is_outline FROM osm_roads_z13
              UNION SELECT *,  'inline' AS render, 0 AS is_outline FROM osm_roads_z13

              UNION SELECT *, 'outline' AS render, 1 AS is_outline FROM osm_rails_z13
              UNION SELECT *,  'inline' AS render, 0 AS is_outline FROM osm_rails_z13
          ) AS roads
        ORDER BY priority DESC, is_outline DESC) AS roads

[z14_roads]
template = postgis_conn
table = (SELECT name, kind, highway, is_link, bridge, tunnel, geometry, render
          FROM (
                    SELECT *, 'outline' AS render, 1 AS is_outline, 1 AS is_casing FROM osm_roads_z14
              UNION SELECT *,  'casing' AS render, 0 AS is_outline, 1 AS is_casing FROM osm_roads_z14 WHERE bridge = 1
              UNION SELECT *,  'inline' AS render, 0 AS is_outline, 0 AS is_casing FROM osm_roads_z14

              UNION SELECT *, 'outline' AS render, 1 AS is_outline, 1 AS is_casing FROM osm_rails_z14
              UNION SELECT *,  'casing' AS render, 0 AS is_outline, 1 AS is_casing FROM osm_rails_z14 WHERE bridge = 1
              UNION SELECT *,  'inline' AS render, 0 AS is_outline, 0 AS is_casing FROM osm_rails_z14
          ) AS roads
        ORDER BY grouping DESC, is_outline DESC, layer ASC, is_casing DESC, priority DESC) AS roads

[z15plus_roads]
template = postgis_conn
table = (SELECT name, kind, highway, is_link, bridge, tunnel, geometry, render
          FROM (
                    SELECT *, 'outline' AS render, 1 AS is_outline, 1 AS is_casing FROM osm_roads_z15plus
              UNION SELECT *,  'casing' AS render, 0 AS is_outline, 1 AS is_casing FROM osm_roads_z15plus WHERE bridge = 1
              UNION SELECT *,  'inline' AS render, 0 AS is_outline, 0 AS is_casing FROM osm_roads_z15plus

              UNION SELECT *, 'outline' AS render, 1 AS is_outline, 1 AS is_casing FROM osm_rails_z15plus
              UNION SELECT *,  'casing' AS render, 0 AS is_outline, 1 AS is_casing FROM osm_rails_z15plus WHERE bridge = 1
              UNION SELECT *,  'inline' AS render, 0 AS is_outline, 0 AS is_casing FROM osm_rails_z15plus
          ) AS roads
        ORDER BY is_outline DESC, layer ASC, tunnel DESC, bridge ASC, is_casing DESC, priority DESC) AS roads
